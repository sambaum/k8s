apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma
  namespace: default
  labels:
    app: uptime-kuma
  annotations:
    keel.sh/policy: major
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@daily'
    keel.sh/approvalDeadline: 672
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
    spec:
      containers:
        - name: uptime-kuma
          image: louislam/uptime-kuma:1.23.0 # {"$imagepolicy": "flux-system:uptime-kuma"}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
          volumeMounts:
            - mountPath: /app/data
              name: config
              subPath: uptime-kuma
          env:
            - name: TZ
              value: 'Europe/Zurich'
            - name: UPTIME_KUMA_DISABLE_FRAME_SAMEORIGIN
              value: '1'
      initContainers:
        - name: init-uptime-kuma
          image: busybox:1.36.1 # {"$imagepolicy": "flux-system:busybox"}
          command: ['sh', '-c', 'echo wait 1 seconds && sleep 1']
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: local-conf-pvc
      dnsConfig:
        options:
          - name: ndots
            value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: uptime-kuma-service
  namespace: default
spec:
  selector:
    app: uptime-kuma
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptime-kuma-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600' # Recommendation for Websockets
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600' # Recommendation for Websockets
    cert-manager.io/cluster-issuer: letsencrypt-staging
    flame.pawelmalak/type: application
    flame.pawelmalak/name: Uptime-Kuma
    flame.pawelmalak/url: https://uptime.example.com
    flame.pawelmalak/icon: https://opencollective-production.s3.us-west-1.amazonaws.com/af670e80-082d-11ec-9ccd-77fe5bcff8a2.png
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - 'uptime.example.com'
      secretName: uptime-tls
  rules:
    - host: uptime.example.com
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: uptime-kuma-service
                port:
                  number: 3001

# Bulk-Change:
# cd /app/data
# sqlite3
# .open kuma.db
# .headers on
# .mode column
# SELECT * from monitor
# PRAGMA table_info(monitor);
# UPDATE monitor SET maxretries = 5;
# UPDATE monitor SET interval = 600;
# UPDATE monitor SET retry_interval = 60;
# UPDATE monitor SET expiry_notification = 1;
