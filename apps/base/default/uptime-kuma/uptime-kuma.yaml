apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma
  namespace: default
  labels:
    app: uptime-kuma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
    spec:
      containers:
      - name: uptime-kuma
        image: louislam/uptime-kuma:2.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
        volumeMounts:
        - mountPath: /app/data
          name: config
          subPath: uptime-kuma
        env:
        - name: TZ
          value: 'Europe/Zurich'
        - name: UPTIME_KUMA_DISABLE_FRAME_SAMEORIGIN
          value: '1'
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: local-conf-pvc
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: uptime-kuma-service
  namespace: default
spec:
  selector:
    app: uptime-kuma
  ports:
  - protocol: TCP
    port: 3001
    targetPort: 3001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptime-kuma-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600' # Recommendation for Websockets
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600' # Recommendation for Websockets
    cert-manager.io/cluster-issuer: letsencrypt-staging
    gethomepage.dev/description: Uptime-Kuma
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: More Apps
    gethomepage.dev/icon: uptime-kuma.svg
    gethomepage.dev/name: Uptime-Kuma
    gethomepage.dev/pod-selector: app=uptime-kuma
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'uptime.example.com'
    secretName: uptime-tls
  rules:
  - host: uptime.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: uptime-kuma-service
            port:
              number: 3001

# Bulk-Change:
# cd /app/data
# sqlite3
# .open kuma.db
# .headers on
# .mode column
# SELECT * from monitor
# PRAGMA table_info(monitor);
# UPDATE monitor SET maxretries = 5;
# UPDATE monitor SET interval = 600;
# UPDATE monitor SET retry_interval = 60;
# UPDATE monitor SET expiry_notification = 1;
