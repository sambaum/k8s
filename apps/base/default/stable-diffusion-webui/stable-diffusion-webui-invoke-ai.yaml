apiVersion: apps/v1
kind: Deployment
metadata:
  name: stable-diffusion-webui-invoke-ai
  namespace: default
  labels:
    app: stable-diffusion-webui-invoke-ai
  annotations:
    keel.sh/policy: major
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@daily'
    keel.sh/approvalDeadline: 672
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stable-diffusion-webui-invoke-ai
  template:
    metadata:
      labels:
        app: stable-diffusion-webui-invoke-ai
    spec:
      containers:
      - name: invoke-ai
        image: goolashe/invoke-ai:20230416
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            nvidia.com/gpu: '1'
        ports:
        - containerPort: 7860
        volumeMounts:
        - mountPath: /data
          name: config
          subPath: stable-diffusion-webui/invoke-ai
        # - mountPath: /output
        #   name: nas-other
        #   subPath: Stable-Diffusion/output/invoke-ai
        - mountPath: /output
          name: config
          subPath: stable-diffusion-webui/invoke-ai/output
        - mountPath: /data/models
          name: data
          subPath: stable-diffusion-webui/models
        - mountPath: /data/.cache
          name: temp
          subPath: stable-diffusion-webui/invoke-ai/.cache
        env:
        - name: TZ
          value: 'Europe/Zurich'
        - name: CLI_ARGS
          value: '--xformers'
        - name: PRELOAD
          value: 'true'
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: local-conf-pvc
      - name: data
        persistentVolumeClaim:
          claimName: local-data-pvc
      - name: temp
        persistentVolumeClaim:
          claimName: local-temp-pvc
      - name: nas-other
        persistentVolumeClaim:
          claimName: truenas-other-pvc
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: stable-diffusion-webui-invoke-ai-service
  namespace: default
spec:
  selector:
    app: stable-diffusion-webui-invoke-ai
  ports:
  - protocol: TCP
    port: 7860
    targetPort: 7860
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stable-diffusion-webui-invoke-ai-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    gethomepage.dev/description: Professional Creative AI Tool
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: More Apps
    gethomepage.dev/icon: https://cdn2.steamgriddb.com/icon/0a8e9d1cf3ee0af0e6526059e1ac59d1.ico
    gethomepage.dev/name: "SD:InvokeAI"
    gethomepage.dev/pod-selector: app=stable-diffusion-webui-invoke-ai
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'stable-diffusion-webui-invoke-ai.example.com'
    secretName: stable-diffusion-webui-invoke-ai.int-tls
  rules:
  - host: stable-diffusion-webui-invoke-ai.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: stable-diffusion-webui-invoke-ai-service
            port:
              number: 7860
