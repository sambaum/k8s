apiVersion: apps/v1
kind: Deployment
metadata:
  name: emby
  namespace: default
  labels:
    app: emby
  annotations:
    keel.sh/policy: 'regexp:^((4|5)\.\d{1,2}\.\d{1,2})$' # prevent notifications about false 7.0.19 release
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@daily'
    keel.sh/approvalDeadline: 672
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emby
  template:
    metadata:
      labels:
        app: emby
    spec:
      containers:
      - name: emby
        image: linuxserver/emby:4.8.3
        resources:
          limits:
            nvidia.com/gpu: '1'
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8096
        volumeMounts:
        - mountPath: /config
          name: config
          subPath: emby
        - mountPath: /data/movies
          name: media
          subPath: Video/Movies
        - mountPath: /data/movies-kids
          name: media
          subPath: Video/Movies-Kids
        - mountPath: /data/tvshows
          name: media
          subPath: Video/Series
        - mountPath: /data/tvshows-kids
          name: media
          subPath: Video/TV-Shows-Kids
        - mountPath: /data/home-videos
          name: media
          subPath: Video/Home-Movies
        - mountPath: /data/home-photos
          name: nas-sam
          subPath: Personal/Fotos/Publish
        env:
        - name: PUID
          value: '0'
        - name: PGID
          value: '0'
        - name: TZ
          value: 'Europe/Zurich'
        securityContext:
          privileged: true
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: local-conf-pvc
      - name: media
        persistentVolumeClaim:
          claimName: truenas-media-pvc
      - name: nas-sam
        persistentVolumeClaim:
          claimName: truenas-sam-pvc
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: emby-service
  namespace: default
spec:
  selector:
    app: emby
  ports:
  - protocol: TCP
    port: 8096
    targetPort: 8096
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: emby-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600' # Recommendation for Websockets
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600' # Recommendation for Websockets
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    cert-manager.io/cluster-issuer: letsencrypt-staging
    gethomepage.dev/description: Emby Mediacenter
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: More Apps
    gethomepage.dev/icon: emby.svg
    gethomepage.dev/name: Emby
    gethomepage.dev/pod-selector: app=emby
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'emby.example.com'
    secretName: emby-tls
  rules:
  - host: emby.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: emby-service
            port:
              number: 8096
