apiVersion: apps/v1
kind: Deployment
metadata:
  name: duplicati
  namespace: default
  labels:
    app: duplicati
  annotations:
    keel.sh/policy: major
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@weekly'
    keel.sh/approvalDeadline: 168
spec:
  replicas: 1
  selector:
    matchLabels:
      app: duplicati
  template:
    metadata:
      labels:
        app: duplicati
    spec:
      containers:
      - name: duplicati
        image: linuxserver/duplicati:2.0.8
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8200
        env:
        - name: PUID
          value: '0'
        - name: PGID
          value: '0'
        - name: TZ
          value: 'Europe/Zurich'
          # resources:
          #   limits:
          #     cpu: "1.5"
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: duplicati-service
  namespace: default
spec:
  selector:
    app: duplicati
  ports:
  - protocol: TCP
    port: 8200
    targetPort: 8200
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: duplicati-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600' # Some requests thake a long time
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600' # Some requests thake a long time
    cert-manager.io/cluster-issuer: letsencrypt-staging
    gethomepage.dev/description: Backup
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: More Apps
    gethomepage.dev/icon: duplicati.svg
    gethomepage.dev/name: Duplicati
    gethomepage.dev/pod-selector: app=duplicati
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'duplicati.example.com'
    secretName: duplicati-tls
  rules:
  - host: duplicati.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: duplicati-service
            port:
              number: 8200
