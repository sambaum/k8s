apiVersion: apps/v1
kind: Deployment
metadata:
  name: keel
  namespace: default
  labels:
    app: keel
  annotations:
    keel.sh/policy: major
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@daily'
    keel.sh/approvalDeadline: 672
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keel
  template:
    metadata:
      labels:
        app: keel
    spec:
      containers:
        - name: keel
          image: keelhq/keel:0.19.0 # {"$imagepolicy": "flux-system:keel"}
          imagePullPolicy: Always
          ports:
            - containerPort: 9300
          env:
            - name: BASIC_AUTH_USER
              value: admin
            - name: BASIC_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keel-basic-auth-password-secret
                  key: BASIC_AUTH_PASSWORD
                  optional: false
            - name: WEBHOOK_ENDPOINT
              value: 'http://keel-telegram-bot.example.com/'
      dnsConfig:
        options:
          - name: ndots
            value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: keel-service
  namespace: default
spec:
  selector:
    app: keel
  ports:
    - protocol: TCP
      port: 9300
      targetPort: 9300
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keel-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    flame.pawelmalak/type: application
    flame.pawelmalak/name: Keel.sh
    flame.pawelmalak/url: https://keel.example.com
    flame.pawelmalak/icon: https://keel.sh/img/logo_small.png
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - 'keel.example.com'
      secretName: keel-tls
  rules:
    - host: keel.example.com
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: keel-service
                port:
                  number: 9300
