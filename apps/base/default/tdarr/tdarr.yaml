apiVersion: apps/v1
kind: Deployment
metadata:
  name: tdarr
  namespace: default
  labels:
    app: tdarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tdarr
  template:
    metadata:
      labels:
        app: tdarr
    spec:
      containers:
      - name: tdarr
        image: ghcr.io/haveagitgat/tdarr:2.50.02
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            nvidia.com/gpu: '1'
        ports:
        - containerPort: 8265
        volumeMounts:
        - mountPath: /app/configs
          name: config
          subPath: tdarr/configs
        - mountPath: /app/server
          name: config
          subPath: tdarr/server
        - mountPath: /media
          name: nas-media
          subPath: Video
        - mountPath: /temp
          name: temp
          subPath: tdarr/transcode_cache
        env:
        - name: PUID
          value: '0'
        - name: PGID
          value: '0'
        - name: TZ
          value: 'Europe/Zurich'
        - name: serverIP
          value: '0.0.0.0'
        - name: serverPort
          value: '8266'
        - name: webUIPort
          value: '8265'
        - name: internalNode
          value: 'true'
        - name: inContainer
          value: 'true'
        - name: ffmpegVersion
          value: '6'
        - name: UMASK_SET
          value: '002'
        - name: nodeName
          value: 'MyInternalNode'
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: local-conf-pvc
      - name: temp
        persistentVolumeClaim:
          claimName: local-temp-pvc
      - name: nas-media
        persistentVolumeClaim:
          claimName: truenas-media-pvc
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: tdarr-service
  namespace: default
spec:
  selector:
    app: tdarr
  ports:
  - protocol: TCP
    port: 8265
    targetPort: 8265
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tdarr-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/client-max-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    cert-manager.io/cluster-issuer: letsencrypt-staging
    gethomepage.dev/description: Distributed Transcoding System
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: More Apps
    gethomepage.dev/icon: tdarr.png
    gethomepage.dev/name: Tdarr
    gethomepage.dev/pod-selector: app=tdarr
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'tdarr.example.com'
    secretName: tdarr.int-tls
  rules:
  - host: tdarr.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: tdarr-service
            port:
              number: 8265
