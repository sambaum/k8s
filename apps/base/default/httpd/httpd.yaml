apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd
  namespace: default
  labels:
    app: httpd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpd
  template:
    metadata:
      labels:
        app: httpd
    spec:
      containers:
      - name: httpd
        image: httpd:2.4.65
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs/
          name: config
          subPath: httpd
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: local-conf-pvc
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: httpd-service
  namespace: default
spec:
  selector:
    app: httpd
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpd-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    gethomepage.dev/description: Apache
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: More Apps
    gethomepage.dev/icon: apache.svg
    gethomepage.dev/name: httpd
    gethomepage.dev/pod-selector: app=httpd
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'httpd.example.com'
    secretName: httpd-tls
  rules:
  - host: httpd.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: httpd-service
            port:
              number: 80
