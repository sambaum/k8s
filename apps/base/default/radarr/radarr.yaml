apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: default
  labels:
    app: radarr
  annotations:
    keel.sh/policy: 'regexp:^(\d{1,2}\.\d{1,2}\.\d{1,2})$' # prevent notifications about false 5.14 version
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@daily'
    keel.sh/approvalDeadline: 672
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
        - name: radarr
          image: linuxserver/radarr:4.7.5 # {"$imagepolicy": "flux-system:radarr"}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7878
          volumeMounts:
            - mountPath: /config
              name: config
              subPath: radarr
            - mountPath: /downloads
              name: media
              subPath: Downloads
            - mountPath: /movies
              name: media
              subPath: Video/Movies
          env:
            - name: PUID
              value: '0'
            - name: PGID
              value: '0'
            - name: TZ
              value: 'Europe/Zurich'
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: local-conf-pvc
        - name: media
          persistentVolumeClaim:
            claimName: truenas-media-pvc
      dnsConfig:
        options:
          - name: ndots
            value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: radarr-service
  namespace: default
spec:
  selector:
    app: radarr
  ports:
    - protocol: TCP
      port: 7878
      targetPort: 7878
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    flame.pawelmalak/type: application
    flame.pawelmalak/name: Radarr
    flame.pawelmalak/url: https://radarr.example.com
    flame.pawelmalak/icon: https://fleet.linuxserver.io/images/linuxserver_radarr.png
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - 'radarr.example.com'
      secretName: radarr-tls
  rules:
    - host: radarr.example.com
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: radarr-service
                port:
                  number: 7878
