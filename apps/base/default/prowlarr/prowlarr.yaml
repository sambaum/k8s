apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: default
  labels:
    app: prowlarr
  annotations:
    keel.sh/policy: 'regexp:^(\d{1,2}\.\d{1,2}\.\d{1,2})$' # to prevent stuff like 1.8.1259
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@daily'
    keel.sh/approvalDeadline: 672
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      containers:
      - name: prowlarr
        image: linuxserver/prowlarr:1.16.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9696
        volumeMounts:
        - mountPath: /config
          name: config
          subPath: prowlarr
        env:
        - name: TZ
          value: 'Europe/Zurich'
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: local-conf-pvc
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: prowlarr-service
  namespace: default
spec:
  selector:
    app: prowlarr
  ports:
  - protocol: TCP
    port: 9696
    targetPort: 9696
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prowlarr-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    gethomepage.dev/description: Prowlarr
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: More Apps
    gethomepage.dev/icon: prowlarr.svg
    gethomepage.dev/name: prowlarr
    gethomepage.dev/pod-selector: app=prowlarr
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'prowlarr.example.com'
    secretName: prowlarr-tls
  rules:
  - host: prowlarr.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: prowlarr-service
            port:
              number: 9696
