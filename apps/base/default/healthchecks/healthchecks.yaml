apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthchecks
  namespace: default
  labels:
    app: healthchecks
  annotations:
    keel.sh/policy: 'regexp:^(\d{1,2}\.\d{1,2}\.\d{1,2})$' # to prevent stuff like 2.8.20230411
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@daily'
    keel.sh/approvalDeadline: 672
spec:
  replicas: 1
  selector:
    matchLabels:
      app: healthchecks
  template:
    metadata:
      labels:
        app: healthchecks
    spec:
      containers:
      - name: healthchecks
        image: linuxserver/healthchecks:3.2.20240304
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        volumeMounts:
        - mountPath: /config
          name: config
          subPath: healthchecks
        env:
        - name: TZ
          value: 'Europe/Zurich'
        - name: PUID
          value: '1000'
        - name: PGID
          value: '1000'
        - name: DEBUG
          value: 'True'
        - name: REGENERATE_SETTINGS
          value: 'true'
        - name: SITE_ROOT
          valueFrom:
            secretKeyRef:
              name: healthchecks-secrets
              key: SITE_ROOT
        - name: SUPERUSER_EMAIL
          valueFrom:
            secretKeyRef:
              name: healthchecks-secrets
              key: SUPERUSER_EMAIL
        - name: SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: healthchecks-secrets
              key: SUPERUSER_PASSWORD
        - name: TELEGRAM_BOT_NAME
          valueFrom:
            secretKeyRef:
              name: healthchecks-secrets
              key: TELEGRAM_BOT_NAME
        - name: TELEGRAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: healthchecks-secrets
              key: TELEGRAM_TOKEN
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: local-conf-pvc
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: healthchecks-service
  namespace: default
spec:
  selector:
    app: healthchecks
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: healthchecks-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    gethomepage.dev/description: Healthchecks Dashbaord
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: More Apps
    gethomepage.dev/icon: healthchecks.svg
    gethomepage.dev/name: Healthchecks
    gethomepage.dev/pod-selector: app
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'healthchecks.example.com'
    secretName: healthchecks-tls
  rules:
  - host: healthchecks.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: healthchecks-service
            port:
              number: 8000

# For "one-off" Telegram integration see https://github.com/healthchecks/healthchecks/issues/115
