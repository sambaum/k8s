apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  releaseName: kube-prometheus-stack
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: '62.7.0'
  interval: 30m
  install:
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    force: true
  valuesFrom:
  - kind: ConfigMap
    name: flux-kube-state-metrics-config
    valuesKey: kube-state-metrics-config.yaml
  values:
    defaultRules:
      rules:
        kubeScheduler: false
    kubeApiServer:
      enabled: false

    grafana:
      enabled: true
      sidecar:
        dashboards:
          searchNamespace: ALL
      persistence:
        type: pvc
        enabled: true
        storageClassName: openebs-local-hostpath-monitoring-conf
        accessModes:
        - ReadWriteOnce
        size: 1Gi
        finalizers:
        - kubernetes.io/pvc-protection
        subPath: 'grafana'
        existingClaim: openebs-local-hostpath-monitoring-conf-pvc
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            more_clear_headers "X-Frame-Options";
          cert-manager.io/cluster-issuer: letsencrypt-staging
          gethomepage.dev/description: Grafana Dashboards
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: More Apps
          gethomepage.dev/icon: grafana.svg
          gethomepage.dev/name: Grafana
          gethomepage.dev/pod-selector: ""
        labels: {}
        hosts:
        - 'grafana.example.com'
        path: /
        pathType: Prefix
        tls:
        - hosts:
          - 'grafana.example.com'
          secretName: grafana-tls

    prometheus:
      enabled: true
      prometheusSpec:
        enableAdminAPI: true
        podMonitorNamespaceSelector: {}
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring
        retention: 30d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-local-hostpath-monitoring-data
              accessModes: ['ReadWriteOnce']
              resources:
                requests:
                  storage: 1Gi
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-staging
          nginx.ingress.kubernetes.io/configuration-snippet: |
            more_clear_headers "X-Frame-Options";
          gethomepage.dev/description: Prometheus Database
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: More Apps
          gethomepage.dev/icon: prometheus.svg
          gethomepage.dev/name: Prometheus
          gethomepage.dev/pod-selector: ""
        labels: {}
        hosts:
        - 'prometheus.example.com'
        path: /
        pathType: Prefix
        tls:
        - hosts:
          - 'prometheus.example.com'
          secretName: prometheus-tls
