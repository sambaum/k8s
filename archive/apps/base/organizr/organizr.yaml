apiVersion: apps/v1
kind: Deployment
metadata:
  name: organizr
  namespace: default
  labels:
    app: organizr
  annotations:
    keel.sh/policy: force
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@daily'
    keel.sh/approvalDeadline: 24
spec:
  replicas: 1
  selector:
    matchLabels:
      app: organizr
  template:
    metadata:
      labels:
        app: organizr
    spec:
      containers:
      - name: organizr
        image: organizr/organizr@sha256:980796e4b9fa5c19f3161accb867f8cf4f2198d148f7f8005bff95bdeba8798c
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /config
          name: config
          subPath: organizr
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: local-conf-pvc
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: organizr-service
  namespace: default
spec:
  selector:
    app: organizr
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: organizr-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    gethomepage.dev/description: Dashbaord
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: More Apps
    gethomepage.dev/icon: organizr.png
    gethomepage.dev/name: Organizr
    gethomepage.dev/pod-selector: app
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'organizr.example.com'
    secretName: organizr-tls
  rules:
  - host: organizr.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: organizr-service
            port:
              number: 80
