apiVersion: apps/v1
kind: Deployment
metadata:
  name: photoprism
  namespace: default
  labels:
    app: photoprism
  annotations:
    keel.sh/policy: major
    keel.sh/trigger: poll
    keel.sh/approvals: '1'
    keel.sh/pollSchedule: '@daily'
    keel.sh/approvalDeadline: 672
spec:
  replicas: 1
  selector:
    matchLabels:
      app: photoprism
  template:
    metadata:
      labels:
        app: photoprism
    spec:
      containers:
      - name: photoprism
        image: photoprism/photoprism:231021
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 2342
        volumeMounts:
        - mountPath: /photoprism/originals
          name: nas-sam
          subPath: Personal/Fotos/Publish-Web
        - mountPath: /photoprism/originals/home-movies
          name: nas-media
          subPath: Video/Home-Movies
        # - mountPath: /photoprism/originals
        #   name: config
        #   subPath: photoprism/originals
        - mountPath: /photoprism/storage
          name: config
          subPath: photoprism/storage # /cache
        - mountPath: /photoprism/storage/cache
          name: data
          subPath: photoprism/storage
        - mountPath: /photoprism/import
          name: data
          subPath: photoprism/import
        env:
        - name: TZ
          value: 'Europe/Zurich'
        - name: PHOTOPRISM_ADMIN_USER
          value: 'admin' # admin login username
        - name: PHOTOPRISM_ADMIN_PASSWORD
          value: 'insecure' # initial admin password (8-72 characters)
        - name: PHOTOPRISM_AUTH_MODE
          value: 'password' # authentication mode (public, password)
        - name: PHOTOPRISM_SITE_URL
          value: 'http://photoprism.int.sambaum.ch/' # server URL in the format 'http(s)://domain.name(:port)/(path)'
        - name: PHOTOPRISM_DISABLE_TLS
          value: 'false' # disables HTTPS/TLS even if the site URL starts with https:// and a certificate is available
        - name: PHOTOPRISM_DEFAULT_TLS
          value: 'true' # defaults to a self-signed HTTPS/TLS certificate if no other certificate is available
        - name: PHOTOPRISM_ORIGINALS_LIMIT
          value: '5000' # file size limit for originals in MB (increase for high-res video)
        - name: PHOTOPRISM_HTTP_COMPRESSION
          value: 'gzip' # improves transfer speed and bandwidth utilization (none or gzip)
        - name: PHOTOPRISM_LOG_LEVEL
          value: 'info' # log level:trace, debug, info, warning, error, fatal, or panic
        - name: PHOTOPRISM_READONLY
          value: 'true' # do not modify originals directory (reduced functionality)
        - name: PHOTOPRISM_EXPERIMENTAL
          value: 'false' # enables experimental features
        - name: PHOTOPRISM_DISABLE_CHOWN
          value: 'false' # disables updating storage permissions via chmod and chown on startup
        - name: PHOTOPRISM_DISABLE_WEBDAV
          value: 'false' # disables built-in WebDAV server
        - name: PHOTOPRISM_DISABLE_SETTINGS
          value: 'false' # disables settings UI and API
        - name: PHOTOPRISM_DISABLE_TENSORFLOW
          value: 'false' # disables all features depending on TensorFlow
        - name: PHOTOPRISM_DISABLE_FACES
          value: 'false' # disables face detection and recognition (requires TensorFlow)
        - name: PHOTOPRISM_DISABLE_CLASSIFICATION
          value: 'false' # disables image classification (requires TensorFlow)
        - name: PHOTOPRISM_DISABLE_VECTORS
          value: 'false' # disables vector graphics support
        - name: PHOTOPRISM_DISABLE_RAW
          value: 'false' # disables indexing and conversion of RAW images
        - name: PHOTOPRISM_RAW_PRESETS
          value: 'false' # enables applying user presets when converting RAW images (reduces performance)
        - name: PHOTOPRISM_JPEG_QUALITY
          value: '85' # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
        - name: PHOTOPRISM_DETECT_NSFW
          value: 'false' # automatically flags photos as private that MAY be offensive (requires TensorFlow)
        - name: PHOTOPRISM_UPLOAD_NSFW
          value: 'true' # allows uploads that MAY be offensive (no effect without TensorFlow)
        - name: PHOTOPRISM_DATABASE_DRIVER
          value: 'mysql' # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
        - name: PHOTOPRISM_DATABASE_SERVER
          value: 'photoprism-service-mariadb:3306' # MariaDB or MySQL database server (hostname:port)
        - name: PHOTOPRISM_DATABASE_NAME
          value: 'photoprism' # MariaDB or MySQL database schema name
        - name: PHOTOPRISM_DATABASE_USER
          value: 'photoprism' # MariaDB or MySQL database user name
        - name: PHOTOPRISM_DATABASE_PASSWORD
          value: 'insecure' # MariaDB or MySQL database user password
        - name: PHOTOPRISM_SITE_CAPTION
          value: 'AI-Powered Photos App'
        - name: PHOTOPRISM_SITE_DESCRIPTION
          value: '' # meta site description
        - name: PHOTOPRISM_SITE_AUTHOR
          value: '' # meta site author
      ## Video Transcoding (https://docs.photoprism.app/getting-started/advanced/transcoding/):
      # PHOTOPRISM_FFMPEG_ENCODER: "software"        # H.264/AVC encoder (software, intel, nvidia, apple, raspberry, or vaapi)
      # PHOTOPRISM_FFMPEG_SIZE: "1920"               # video size limit in pixels (720-7680) (default: 3840)
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # video bitrate limit in Mbit/s (default: 50)
      ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
      # PHOTOPRISM_INIT: "https gpu tensorflow"
      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
      - name: maria
        image: mariadb:10.11.5
        # command: ["mariadbd --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120"]
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: config
          subPath: photoprism/mariadb
        env:
        - name: MARIADB_AUTO_UPGRADE
          value: '1'
        - name: MARIADB_INITDB_SKIP_TZINFO
          value: '1'
        - name: MARIADB_DATABASE
          value: 'photoprism'
        - name: MARIADB_USER
          value: 'photoprism'
        - name: MARIADB_PASSWORD
          value: 'insecure'
        - name: MARIADB_ROOT_PASSWORD
          value: 'insecure'
        - name: MYSQL_INNODB_BUFFER_POOL_SIZE
          value: '512M'
        - name: MYSQL_TRANSACTION_ISOLATION
          value: 'READ-COMMITTED'
        - name: MYSQL_CHARACTER_SET_SERVER
          value: 'utf8mb4'
        - name: MYSQL_COLLATION_SERVER
          value: 'utf8mb4_unicode_ci'
        - name: MYSQL_MAX_CONNECTIONS
          value: '512'
        - name: MYSQL_INNODB_ROLLBACK_ON_TIMEOUT
          value: 'OFF'
        - name: MYSQL_INNODB_LOCK_WAIT_TIMEOUT
          value: '120'
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: local-conf-pvc
      - name: data
        persistentVolumeClaim:
          claimName: local-data-pvc
      - name: nas-sam
        persistentVolumeClaim:
          claimName: truenas-sam-pvc
      - name: nas-media
        persistentVolumeClaim:
          claimName: truenas-media-pvc
      dnsConfig:
        options:
        - name: ndots
          value: "1"
---
kind: Service
apiVersion: v1
metadata:
  name: photoprism-service
  namespace: default
spec:
  selector:
    app: photoprism
  ports:
  - protocol: TCP
    port: 2342
    targetPort: 2342
---
kind: Service
apiVersion: v1
metadata:
  name: photoprism-service-mariadb
  namespace: default
spec:
  selector:
    app: photoprism
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: photoprism-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 1000m
    cert-manager.io/cluster-issuer: letsencrypt-staging
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - 'photoprism.example.com'
    secretName: photoprism-tls
  rules:
  - host: photoprism.example.com
    http:
      paths:
      - pathType: Prefix
        path: '/'
        backend:
          service:
            name: photoprism-service
            port:
              number: 2342
